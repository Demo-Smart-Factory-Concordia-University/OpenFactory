# OpenFactory configuration

# OpenFactory Version
OPENFACTORY_VERSION: ${OPENFACTORY_VERSION}

# OpenFactory User
OPENFACTORY_USER: openfactory

# OpenFactory Manager Node
OPENFACTORY_MANAGER_NODE: ${MANAGER_NODE_IP}

# OpenFactory Manager Node Docker URL

# Use Docker running on the host via Unix socket
# OPENFACTORY_MANAGER_NODE_DOCKER_URL: unix:///var/run/docker.sock

# Alternatively, connect to Docker on a remote machine via SSH
OPENFACTORY_MANAGER_NODE_DOCKER_URL: ssh://openfactory@${MANAGER_NODE_IP}

# OpenFactory Overlay network
OPENFACTORY_NETWORK: factory-net

# Traefik configurations
OPENFACTORY_DOMAIN: ${OPENFACTORY_DOMAIN}

# OpenFactory Log Level
OPENFACTORY_LOG_LEVEL: INFO
KSQLDB_LOG_LEVEL: WARNING
KAFKA_LOG_LEVEL: WARNING

# OpenFactory Database
SQL_ALCHEMY_CONN: ${SQL_ALCHEMY_CONN}

# Kafka-Cluster
# Comma-separated list of broker addresses (hostnames or IPs) with ports
# Example: 123.456.67.8:9092,123.456.67.9:9092,broker3.example.com:9092
KAFKA_BROKER: ${KAFKA_BROKER}

# ksqlDB server URL
KSQLDB_URL: ${KSQLDB_URL}

# Docker Images
MTCONNECT_AGENT_IMAGE: ghcr.io/demo-smart-factory-concordia-university/mtcagent:v2.5.0.4
MTCONNECT_PRODUCER_IMAGE: ghcr.io/demo-smart-factory-concordia-university/kafka-mtc-producer:${OPENFACTORY_VERSION}
INFLUXDB_CONNECTOR_IMAGE: ghcr.io/demo-smart-factory-concordia-university/influxdb_connector:latest

# InfluxDB
INFLUXDB_URL: ${INFLUXDB_URL}
INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}

# Colors for ofa cli
OFA_SUCCSESS: "\e[0;32m"
OFA_FAIL: "\e[0;31m"
OFA_END: "\e[0m"

#!/usr/bin/env python3
"""
Generate a static Bash completion script for the OpenFactory CLI (`ofa`).

This script introspects the Click-based `ofa` command (from `openfactory.ofacli:cli`)
and produces a shell function that Bash can source—no Python invocation on each TAB.

Usage:
    # 1. Install your CLI so `ofa` is on your PATH:
    pip install -e .

    # 2. Generate (or regenerate) the completion file:
    python generate_ofa_completion.py > ~/.ofa_completion.sh

    # 3. In your ~/.bashrc (or ~/.profile), add:
    echo "source ~/.ofa_completion.sh" >> ~/.bashrc

    # 4. Reload your shell:
    source ~/.bashrc
"""

import click
from click import Path, File
from openfactory.ofacli import cli


def takes_file(cmd: click.Command) -> bool:
    """ Helper function to detect “file‐taking” params """
    for p in cmd.params:
        # Arguments of type Path or File
        if isinstance(p.type, (Path, File)):
            return True
    return False


def main():
    """ Main function to generate the completion script """
    top_cmds = list(cli.commands.keys()) + ["--help"]

    print("# Generated by generate_ofa_completion.py")
    print("_ofa_static() {")
    print("  local cur=\"${COMP_WORDS[COMP_CWORD]}\"\n")

    # Top‐level
    print("  if [[ ${COMP_CWORD} -eq 1 ]]; then")
    print("    COMPREPLY=( $(compgen -W \"%s\" -- \"$cur\") )" %
          " ".join(top_cmds))
    print("    return 0")
    print("  fi\n")

    # Sub‐commands
    print("  case \"${COMP_WORDS[1]}\" in")
    for grp_name, grp in cli.commands.items():
        if not isinstance(grp, click.Group):
            continue

        subs = list(grp.commands.keys()) + ["--help"]
        print(f"    {grp_name})")
        # when just `ofa group<TAB>`
        print("        if [[ ${COMP_CWORD} -eq 2 ]]; then")
        print("            COMPREPLY=( $(compgen -W \"%s\" -- \"$cur\") )" %
              " ".join(subs))
        print("            return 0")
        print("        fi")

        # for each subcommand, if it takes a file, allow filename completion
        for cmd_name, cmd in grp.commands.items():
            if takes_file(cmd):
                print(f"        if [[ ${{COMP_CWORD}} -ge 3 && \"${{COMP_WORDS[2]}}\" == \"{cmd_name}\" ]]; then")
                print("            COMPREPLY=( $(compgen -f -- \"$cur\") )")
                print("            compopt -o filenames")
                print("            return 0")
                print("        fi")

        print("        ;;")

    print("    *)")
    print("        COMPREPLY=()")
    print("        ;;")
    print("  esac\n")
    print("  return 0")
    print("}")
    print()
    print("complete -F _ofa_static ofa")


if __name__ == "__main__":
    main()
